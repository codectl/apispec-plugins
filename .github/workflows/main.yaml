name: main

on:
  push:
    branches: [ master ]
    tags: [ "[0-9]+.[0-9]+.[0-9]+*" ]
  pull_request:
    branches: [ master ]

jobs:

  linters:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - uses: pre-commit/action@v2.0.3

  tests:
    name: ${{ matrix.os }}/${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os: [ Ubuntu, MacOS, Windows ]
        python-version: [ 3.7, 3.8, 3.9, "3.10" ]
        experimental: [ false ]
        include:
          - os: Ubuntu
            python-version: pypy3
            experimental: false
          - os: Ubuntu
            python-version: "3.10"
            experimental: true
            bootstrap-args: "--git https://github.com/python-poetry/poetry.git@master"
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install poetry
        shell: bash
        run: |
          curl -sL -o poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py
          python poetry.py -y

      - name: Update PATH
        if: ${{ matrix.os != 'Windows' }}
        shell: bash
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update Path for Windows
        if: ${{ matrix.os == 'Windows' }}
        shell: bash
        run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        shell: bash
        run: poetry install --no-interaction

      - name: Run test suite from tox
        shell: bash
        run: |
          python -m pip install --upgrade pip tox
          tox -e py -- -p no:sugar -p no:warnings -q

  sucess:
    runs-on: ubuntu-latest
    needs:
    - tests
    - linters
    steps:
    - run: echo "Great success!"
