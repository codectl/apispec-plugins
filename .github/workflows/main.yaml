---
name: main

on:
  push:
    branches: [ master ]
    tags: [ "[0-9]+.[0-9]+.[0-9]+*" ]
  pull_request:
    branches: [ master ]

jobs:

  linters:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/pyenvsetup
        with:
          python-version: "3.8"
          os: ${{ matrix.os }}
      - name: Run linter with tox
        shell: bash
        run: tox -e lint

  tests:
    name: ${{ matrix.os }}/${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]
        experimental: [ false ]
        include:
          - os: ubuntu-latest
            python-version: "pypy-3.7"
            experimental: false
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/pyenvsetup
        with:
          python-version: ${{ matrix.python-version }}
          os: ${{ matrix.os }}
      - name: Run test suite with tox
        shell: bash
        run: tox -e py -- -p no:sugar -p no:warnings -q

  coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/pyenvsetup
        with:
          python-version: "3.8"
          os: ${{ matrix.os }}
      - name: Run coverage with tox
        shell: bash
        run: tox -e coverage -- -p no:sugar -p no:warnings -q
      - name: Submit coverage to codecov
        uses: codecov/codecov-action@v2

  success:
    runs-on: ubuntu-latest
    needs:
      - linters
      - tests
      - coverage
    steps:
      - run: echo "Done"

  pypi-publish:
    needs: [ success ]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/pyenvsetup
        with:
          python-version: "3.8"
      - name: Build & publish with poetry
        run: poetry publish --build -u $PYPI_USERNAME -p $PYPI_PASSWORD
        env:
          PYPI_USERNAME: __token__
          PYPI_PASSWORD: ${{ secrets.PYPI_TOKEN }}
